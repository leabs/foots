---
import ToggleTheme from '@elements/ToggleTheme/ToggleTheme.astro'
import { ViewTransitions } from 'astro:transitions'
interface Props {
  title: string
}

const { title } = Astro.props
---

<!doctype html>
<html lang='en' class="dark">
  <head>
    <meta charset='UTF-8' />
    <meta name='description' content='Astro description' />
    <meta name='viewport' content='width=device-width' />
    <link rel='icon' type='image/svg+xml' href='/favicon.svg' />
    <meta name='generator' content={Astro.generator} />
    <title>{title}</title>
    <ViewTransitions />
  </head>
  <body
  
    class='bg-[url("/img/testebg1.png")] bg-cover bg-right-bottom bg-no-repeat w-full overflow-hidden h-screen bg-light text-dark dark:bg-dark dark:text-light'
  >
    <div>
      <ToggleTheme />
      <slot />
    </div>

    <!-- <script>
      const themeToggles = document.querySelectorAll('[data-theme-toggle]')
      console.log('AQUI', themeToggles)
      const getTheme = () => localStorage.getItem('theme') || 'light'

      const setTheme = (theme) => {
        if (theme === 'dark') {
          document.documentElement.classList.add(theme)
        } else {
          document.documentElement.classList.remove('dark')
        }
      }

      window.addEventListener('DOMContentLoaded', () => setTheme(getTheme()))
      document.addEventListener('astro:after-swap', () => setTheme(getTheme()))

      themeToggles.forEach((toggle) => {
        toggle.addEventListener('click', () => {
          const nextTheme = getTheme() === 'light' ? 'dark' : 'light'
          console.log('nextTheme', nextTheme)
          localStorage.setItem('theme', nextTheme)
          setTheme(nextTheme)
        })
      })

      document.addEventListener(
        'astro:page-load',
        () => {
          // This only runs once.
          setTheme(getTheme())
        },
        { once: false }
      )
    </script> -->

    <style is:global>
      /* Firefox */
      * {
        scrollbar-width: thin;
        scrollbar-color: transparent;
      }

      /* Chrome, Edge, and Safari */
      *::-webkit-scrollbar {
        width: 10px;
      }

      *::-webkit-scrollbar-track {
        background-color: rgba(255, 183, 3, 0.2);
        border-radius: 5px;
      }

      *::-webkit-scrollbar-thumb {
        background: linear-gradient(
          to top,
          rgba(251, 133, 0, 0.7),
          rgba(255, 183, 3, 0.7),
          rgba(251, 133, 0, 0.4)
        );
        border-radius: 5px;
      }
      ::-webkit-scrollbar-thumb:hover {
        background: linear-gradient(
          to top,
          rgba(251, 133, 0, 1),
          rgba(255, 183, 3, 1),
          rgba(251, 133, 0, 1)
        );
      }

      ::-webkit-scrollbar-track-piece {
        background-color: transparent;
      }

      ::-webkit-scrollbar-corner {
        background-color: transparent;
      }
    </style>
  </body>
</html>
